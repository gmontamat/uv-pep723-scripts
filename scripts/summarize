#!/usr/bin/env -S uv run --script
# /// script
# requires-python = ">=3.8"
# dependencies = [
#     "openai",
#     "python-dotenv",
# ]
# ///

import os
import sys

import openai
from dotenv import load_dotenv

# Read transcript from stdin
transcript = sys.stdin.read()
if not transcript.strip():
    print("No transcript provided via stdin.", file=sys.stderr)
    sys.exit(1)

# Load .env file for OpenAI API key
load_dotenv(dotenv_path=os.path.join(os.getcwd(), ".env"))
api_key = os.getenv("OPENAI_API_KEY")
base_url = os.getenv("OPENAI_BASE_URL", "")
model_name = os.getenv("OPENAI_MODEL", "gpt-4o")

if not api_key:
    print("OPENAI_API_KEY not found in .env file.", file=sys.stderr)
    sys.exit(1)

openai.api_key = api_key
if base_url:
    openai.api_base = base_url

# Prepare prompt for summarization
prompt = (
    "Summarize the following video transcript in a concise paragraph:\n\n"
    f"{transcript}\n\nSummary:"
)

try:
    response = openai.chat.completions.create(
        model=model_name,
        messages=[
            {
                "role": "system",
                "content": "You are a helpful assistant that summarizes transcripts.",
            },
            {"role": "user", "content": prompt},
        ],
        max_tokens=300,
        temperature=0.5,
    )
    summary = response.choices[0].message.content.strip()
    print(summary)
except Exception as e:
    print(f"Error: {e}", file=sys.stderr)
    sys.exit(1)
